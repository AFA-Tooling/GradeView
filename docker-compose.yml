services:
  reverseProxy:
    container_name: gradeview-reverse-proxy
    image: ${CI_REGISTRY_IMAGE:-gradeview}/reverse-proxy:${REVERSE_PROXY_VERSION:-development}
    build: ./reverseProxy
    volumes:
      - ${SOCKETS_DIR:-/dev/null}:/run/sockets
      - ./reverseProxy/default.conf.template:/etc/nginx/templates/default.conf.template:ro 
      - ./reverseProxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro 
    environment:
      - REVERSE_PROXY_LISTEN=${REVERSE_PROXY_LISTEN:-0.0.0.0:80}
    networks:
      - frontend
      - concept_map_integration
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
      - api
      - dtgui-progress-report
  web:
    container_name: gradeview-web
    build: ./api
    image: node:18-alpine
    working_dir: /website
    volumes:
      - ./website:/website
    environment:
      - REACT_APP_PROXY_SERVER=${REACT_APP_PROXY_SERVER}
      - PORT=${REACT_APP_PORT}
    networks:
      - frontend
    command: ["node", "server/index.js"]
    restart: unless-stopped
    depends_on:
      - api
  api:
    container_name: gradeview-api
    image: ${CI_REGISTRY_IMAGE:-gradeview}/server:${API_VERSION:-development}
    build: ./api
    volumes:
      - ./api:/api
    environment:
      - NODE_ENV=production
      - PORT=${API_PORT:-8000}
      - REDIS_HOST=redis
      - REDIS_PORT=6379   
      - REDIS_PASSWORD=${REDIS_DB_SECRET:-password}  
    networks:
      - frontend
      - db
    command: npm start
    restart: unless-stopped
  dtgui-progress-report:
    container_name: dtgui-progress-report
    image: ${CI_REGISTRY_IMAGE:-dtgui}/progress-report:${PROGRESS_REPORT_VERSION:-development}
    build: ./progressReport
    environment:
      - LISTEN_PORT=${PROGRESS_REPORT_PORT:-5000}
    networks:
      - concept_map_integration
    ports:
      - 8080:${PROGRESS_REPORT_PORT}
    restart: unless-stopped
  redis:
    image: redis:latest
    networks:
      - db
      - frontend
    command: redis-server --requirepass ${REDIS_DB_SECRET:-password}
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=NciZ!4DfXxwAUNA
  dbcron:
    build: ./dbcron
    volumes:
      - ./dbcron:/dbcron
    networks:
      - db
    depends_on:
      - redis
networks:
  frontend:
    name: frontend
    driver: bridge
  concept_map_integration:
    name: concept_map_integration
  db:
    name: db
