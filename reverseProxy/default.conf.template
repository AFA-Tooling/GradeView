# HTTP: serve ACME challenge, redirect everything else to HTTPS
server {
  listen 80;
  server_name gradeview.eecs.berkeley.edu;

  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS: real app
server {
  listen 443 ssl;
  server_name gradeview.eecs.berkeley.edu;

  ssl_certificate     /etc/letsencrypt/live/gradeview.eecs.berkeley.edu/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/gradeview.eecs.berkeley.edu/privkey.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;

  # Frontend
  location / {
    proxy_pass http://web:3000;
    proxy_set_header Host $$host;
    proxy_set_header X-Real-IP $$remote_addr;
    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $$scheme;
  }

  # API (keep /api prefix)
  location /api/ {
    proxy_pass http://api:8000;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $$host;
    proxy_set_header X-Real-IP $$remote_addr;
    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $$scheme;
  }

  # Concept Map
  location = /progress  { return 301 /progress/; }
  location ^~ /progress/ {
    proxy_pass http://dtgui-progress-report:8080/;
    proxy_set_header Host $$host;
    proxy_set_header X-Real-IP $$remote_addr;
    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $$scheme;
  }
}
