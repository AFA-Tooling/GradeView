services:
  reverseProxy:
    image: nginx:1.25.2-alpine
    container_name: gradeview-reverse-proxy
    depends_on:
      api:
        condition: service_started
      dtgui-progress-report:
        condition: service_started
      web:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverseProxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./reverseProxy/site.conf:/etc/nginx/conf.d/site.conf:ro
      - ./reverseProxy/empty:/etc/nginx/templates:ro    
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - frontend
      - concept_map_integration
    restart: unless-stopped
  web:
    container_name: gradeview-web
    image: gradeview/web:development
    build: 
      context: ./website
      dockerfile: Dockerfile
      args:
        REACT_APP_PROXY_SERVER: /api
    environment:
      PORT: "3000"
      REACT_APP_PROXY_SERVER: /api
    networks:
      - frontend
    restart: unless-stopped
  api:
    container_name: gradeview-api
    image: ${CI_REGISTRY_IMAGE:-gradeview}/server:${API_VERSION:-development}
    build: ./api
    volumes:
      - ./api:/api
    environment:
      - PORT=${API_PORT}
    networks:
      - frontend
      - db
    command: npm start
    restart: unless-stopped
  dtgui-progress-report:
    container_name: dtgui-progress-report
    image: ${CI_REGISTRY_IMAGE:-dtgui}/progress-report:${PROGRESS_REPORT_VERSION:-development}
    build: ./progressReport
    environment:
      - LISTEN_PORT=${PROGRESS_REPORT_PORT:-5000}
    networks:
      - concept_map_integration
    ports:
      - 8080:${PROGRESS_REPORT_PORT}
    restart: unless-stopped
  redis:
    image: redis:latest
    networks:
      - db
    command: redis-server --requirepass ${REDIS_DB_SECRET:-password}
    ports:
      - 6379:6379
  dbcron:
    build: ./dbcron
    volumes:
      - ./dbcron:/dbcron
    networks:
      - db
    depends_on:
      - redis
networks:
  frontend:
    name: frontend
  concept_map_integration:
    name: concept_map_integration
  db:
    name: db
